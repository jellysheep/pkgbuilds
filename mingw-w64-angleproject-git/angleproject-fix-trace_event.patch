--- src/third_party/trace_event/trace_event.h.orig	2014-01-06 10:40:41.106093009 +0100
+++ src/third_party/trace_event/trace_event.h	2014-01-06 10:40:09.310989874 +0100
@@ -587,7 +587,7 @@ const unsigned long long noEventId = 0;
 class TraceID {
 public:
     explicit TraceID(const void* id, unsigned char* flags) :
-        m_data(static_cast<unsigned long long>(reinterpret_cast<unsigned long>(id)))
+        m_data((unsigned long long)id)
     {
         *flags |= TRACE_EVENT_FLAG_MANGLE_ID;
     }
@@ -806,14 +806,14 @@ public:
     }
 
     // FIXME: Make load/store to traceSamplingState[] thread-safe and atomic.
-    static inline const char* current()
+    /*static inline const char* current()
     {
         return reinterpret_cast<const char*>(*gl::traceSamplingState[BucketNumber]);
     }
     static inline void set(const char* categoryAndName)
     {
         *gl::traceSamplingState[BucketNumber] = reinterpret_cast<long>(const_cast<char*>(categoryAndName));
-    }
+    }*/
 
 private:
     const char* m_previousState;
