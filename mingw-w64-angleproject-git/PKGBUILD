# Contributor: Filip Brcic <brcha@gna.org>
# Contributor: jellysheep <max DOT mail AT dameweb DOT de>

pkgname=mingw-w64-angleproject-git
pkgver=1.2.0.r2453
pkgrel=2
pkgdesc='Angle project built from git source (mingw-w64)'
arch=('any')
url='http://code.google.com/p/angleproject/'
license=('LGPLv2+')
groups=('mingw-w64')
depends=()
makedepends=('mingw-w64-gcc' 'gyp-svn' 'git')
provides=('mingw-w64-angleproject')
conflicts=('mingw-w64-angleproject')
options=('!strip' '!buildflags' 'staticlibs')
source=('angleproject::git+https://chromium.googlesource.com/angle/angle'
		'angleproject-include-import-library-and-use-def-file.patch'
		'angleproject-fix-mingw-compatibility.patch'
		'angleproject-export-shader-symbols.patch'
		'angleproject-fix-trace_event.patch'
		'angleproject-fix-translator-link.patch'
		'angleproject-fix-renderer9-stencilformat.patch')
md5sums=('SKIP'
		'11bd81ef12630aa2dc1f325f0b593de5'
		'10b197b483a543fcf7e1ae5ec379848f'
		'079e79c52e83d4f91b7eebf4d350980c'
		'59a3d60f5b1b6676056444db8a7883fe'
		'90f96b5705820e71067a332e3ad0f535'
		'5f30f3a3c668e4a76920a71e0dddc87d')

_architectures="i686-w64-mingw32 x86_64-w64-mingw32"

pkgver() {
	cd "$srcdir/angleproject"
	head -n 4 src/common/version.h | sed -e 's/BUILD_REVISION /BUILD_REVISION r/' -e 's/.* //' | tr '\n' '.' | sed 's/.$/\n/'
}

build() {
	cd "${srcdir}"/angleproject

	# Make sure an import library is created and the correct .def file is used during the build
	patch -p0 -i "${srcdir}"/angleproject-include-import-library-and-use-def-file.patch

	# .def pieces taken from http://qt.gitorious.org/qt/qtbase/commit/b2c44985e740d0a0ea86b7b9f4cc849258ac2340
	patch -p0 -i "${srcdir}"/angleproject-fix-mingw-compatibility.patch

	# WebKit depends on symbols which are used in the static library called translator
	# This static library is linked into the libGLESv2 shared library
	# To allow building WebKit export the required symbols in the libGLESv2 shared library
	patch -p0 -i "${srcdir}"/angleproject-export-shader-symbols.patch

	# Fix missing methods in trace_event.h
	patch -p0 -i "${srcdir}"/angleproject-fix-trace_event.patch

	# Fix stencil format method in renderer9_utils.cpp
	patch -p0 -i "${srcdir}"/angleproject-fix-renderer9-stencilformat.patch

	export CFLAGS="-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions --param=ssp-buffer-size=4"
	export CXXFLAGS="-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions --param=ssp-buffer-size=4"
	unset LDFLAGS

	CORE_COUNT=1 #"$(nproc)"
	
	sed -i -e 's_python _python2 _g' -e 's_"python"_"python2"_g' -e "s_'python'_'python2'_g" -e 's_/usr/bin/python_/usr/bin/python2_g' $(find -type f)
	sed -i -e 's|vsprintf_s|vsprintf|g' $(find . \( -name '*.h' -or -name '*.cpp' \) -and -type f)

	for _arch in ${_architectures}
	do
		mkdir -p build-${_arch} && pushd build-${_arch}

		export CXX="${_arch}-g++"
		export AR="${_arch}-ar"

		if [ "${_arch}" = "i686-w64-mingw32" ]
		then
			target="win32"
		else
			target="win64"
		fi

		gyp -D OS=win -D MSVS_VERSION=2010e -D TARGET=$target --depth . -I ../build/common.gypi ../src/build_angle.gyp

		# Make sure the correct libraries are linked in
		#sed -i s@'^LIBS :='@'LIBS := -ld3d9 -ldxguid -static -lmsvcrt'@ ../src/libGLESv2.target.mk
		sed -i s@'^LIBS :='@'LIBS := -ld3d9 -ldxguid'@ ../src/libGLESv2.target.mk
		
		sed -i s@'^LIBS :='@'LIBS := -ld3d9 -ldxguid -L. -lGLESv2'@ ../src/libEGL.target.mk
		#sed -i s@'^LIBS :='@'LIBS := -Wl,--whole-archive -ld3d9 -ldxguid -Wl,--no-whole-archive -L. -lGLESv2 out/Debug/obj.target/src/compiler/translator/ShaderLang.o out/Debug/obj.target/src/third_party/murmurhash/MurmurHash3.o out/Debug/src/libtranslator.a out/Debug/src/libpreprocessor.a'@ ../src/libEGL.target.mk
		#sed -i s@'^LIBS :='@'LIBS := -static -Wl,--whole-archive -ld3d9 -ldxguid -Wl,--no-whole-archive -L. libGLESv2.dll.a out/Debug/obj.target/src/compiler/translator/ShaderLang.o out/Debug/obj.target/src/third_party/murmurhash/MurmurHash3.o out/Debug/src/libtranslator.a out/Debug/src/libpreprocessor.a'@ ../src/libEGL.target.mk

		# Fix linking of libtranslator.a
		pushd "${srcdir}"/angleproject
		patch -p0 -i "${srcdir}"/angleproject-fix-translator-link.patch
		popd

		make V=1 CXXFLAGS="-std=c++11 -msse2 -DUNICODE -D_UNICODE" -j"${CORE_COUNT}"

		${AR} rcs libGLESv2.a \
			out/Debug/obj.target/libGLESv2/../src/common/*.o \
			out/Debug/obj.target/libGLESv2/../src/libGLESv2/renderer/*.o \
			out/Debug/obj.target/libGLESv2/../src/libGLESv2/renderer/d3d9/*.o \
			out/Debug/obj.target/libGLESv2/../src/libGLESv2/renderer/d3d11/*.o \
			out/Debug/obj.target/libGLESv2/../src/libGLESv2/*.o \
			#out/Debug/obj.target/../src/libtranslator.a \
			#out/Debug/obj.target/../src/libpreprocessor.a
		${AR} rcs libEGL.a \
			out/Debug/obj.target/libEGL/../src/common/*.o \
			out/Debug/obj.target/libEGL/../src/libEGL/*.o

		popd
	done
}

package() {
	cd "${srcdir}"/angleproject

	for _arch in ${_architectures}
	do
		pushd build-${_arch}

		mkdir -p "${pkgdir}"/usr/${_arch}/{bin,lib,include}

		install out/Debug/src/libGLESv2.so "${pkgdir}"/usr/${_arch}/bin/libGLESv2.dll
		install out/Debug/src/libEGL.so "${pkgdir}"/usr/${_arch}/bin/libEGL.dll

		${_arch}-strip --strip-unneeded "${pkgdir}"/usr/${_arch}/bin/*.dll

		install libGLESv2.a "${pkgdir}"/usr/${_arch}/lib/
		install libEGL.a "${pkgdir}"/usr/${_arch}/lib/

		${_arch}-strip --strip-debug "${pkgdir}"/usr/${_arch}/lib/libEGL.a
		install libEGL.dll.a "${pkgdir}"/usr/${_arch}/lib/
		install libGLESv2.dll.a "${pkgdir}"/usr/${_arch}/lib/
		${_arch}-strip --strip-unneeded "${pkgdir}"/usr/${_arch}/lib/*.dll.a

		cp -Rv ../include/* "${pkgdir}"/usr/${_arch}/include/

		popd
	done
}
