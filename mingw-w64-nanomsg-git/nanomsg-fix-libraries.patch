--- nanomsg.orig/src/CMakeLists.txt	2014-03-30 15:49:24.572733159 +0200
+++ nanomsg/src/CMakeLists.txt	2014-03-30 15:50:20.193520125 +0200
@@ -255,8 +255,8 @@ add_definitions (-DNN_EXPORTS)
 add_definitions (-DNN_USE_LITERAL_IFADDR)
 
 target_link_libraries (nanomsg ws2_32)
-target_link_libraries (nanomsg Mswsock.lib)
-target_link_libraries (nanomsg Advapi32.lib)
+target_link_libraries (nanomsg mswsock)
+target_link_libraries (nanomsg advapi32)
 
 install(TARGETS nanomsg
     ARCHIVE DESTINATION lib
--- nanomsg.orig/src/aio/usock_win.inc	2014-03-30 17:01:29.172157533 +0200
+++ nanomsg/src/aio/usock_win.inc	2014-03-30 17:02:05.375583737 +0200
@@ -29,6 +29,8 @@
 
 #include <stddef.h>
 #include <string.h>
+WINBASEAPI WINBOOL WINAPI GetQueuedCompletionStatusEx (HANDLE CompletionPort, LPOVERLAPPED_ENTRY lpCompletionPortEntries, ULONG ulCount, PULONG ulNumEntriesRemoved, DWORD dwMilliseconds, WINBOOL fAlertable);
+WINBASEAPI WINBOOL WINAPI CancelIoEx (HANDLE hFile, LPOVERLAPPED lpOverlapped);
 
 #define NN_USOCK_STATE_IDLE 1
 #define NN_USOCK_STATE_STARTING 2
--- nanomsg.orig/src/aio/worker_win.inc	2014-03-30 17:01:29.172157533 +0200
+++ nanomsg/src/aio/worker_win.inc	2014-03-30 17:02:37.915668504 +0200
@@ -28,6 +28,9 @@
 #include "../utils/cont.h"
 #include "../utils/fast.h"
 
+WINBASEAPI WINBOOL WINAPI GetQueuedCompletionStatusEx (HANDLE CompletionPort, LPOVERLAPPED_ENTRY lpCompletionPortEntries, ULONG ulCount, PULONG ulNumEntriesRemoved, DWORD dwMilliseconds, WINBOOL fAlertable);
+WINBASEAPI WINBOOL WINAPI CancelIoEx (HANDLE hFile, LPOVERLAPPED lpOverlapped);
+
 #define NN_WORKER_MAX_EVENTS 32
 
 #define NN_WORKER_OP_STATE_IDLE 1
--- nanomsg.orig/src/transports/utils/literal.c	2014-03-30 17:01:29.175490872 +0200
+++ nanomsg/src/transports/utils/literal.c	2014-03-30 17:03:59.222553255 +0200
@@ -32,9 +32,6 @@
 #include <netinet/in.h>
 #endif
 
-/*  On Windows XS there's no inet_pton() function. */
-#if defined NN_HAVE_WINDOWS && ((_WIN32_WINNT <= 0x0501) || (WINVER <= 0x0501))
-
 static int nn_inet_pton(int family, const char *src, void *dst)
 {
     int rc;
@@ -63,15 +60,6 @@ static int nn_inet_pton(int family, cons
     return 1;
 }
 
-#else
-
-static int nn_inet_pton(int family, const char *src, void *dst)
-{
-    return inet_pton (family, src, dst);
-}
-
-#endif
-
 int nn_literal_resolve (const char *addr, size_t addrlen,
     int ipv4only, struct sockaddr_storage *result, size_t *resultlen)
 {
